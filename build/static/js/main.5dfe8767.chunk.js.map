{"version":3,"sources":["images/Mercurio.png","images/Venus.png","images/Terra.png","images/Marte.png","images/Jupiter.png","images/Saturno.png","images/Urano.png","images/Netuno.png","components/Header.js","components/Title.js","components/PlanetCard.js","data/planets.js","components/SolarSystem.js","components/MissionCard.js","data/missions.js","components/Missions.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","React","Component","Title","headline","this","props","className","PlanetCard","_this$props","planetName","planetImage","data-testid","src","alt","concat","Planets","name","image","MercurioImg","VenusImg","TerraImg","MarteImg","JupiterImg","SaturnoImg","Uranoimg","Netunoimg","SolarSystem","components_Title","planets","map","planeta","components_PlanetCard","key","MissionCard","year","country","destination","USA","Missions","Fragment","missions","mission","components_MissionCard","App","components_Header","components_SolarSystem","components_Missions","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5dfe8767.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mercurio.b0eb537d.png\";","module.exports = __webpack_public_path__ + \"static/media/Venus.b94d13fa.png\";","module.exports = __webpack_public_path__ + \"static/media/Terra.4aab371b.png\";","module.exports = __webpack_public_path__ + \"static/media/Marte.e113f87a.png\";","module.exports = __webpack_public_path__ + \"static/media/Jupiter.2a3057d6.png\";","module.exports = __webpack_public_path__ + \"static/media/Saturno.6ee7ceec.png\";","module.exports = __webpack_public_path__ + \"static/media/Urano.389d9ec6.png\";","module.exports = __webpack_public_path__ + \"static/media/Netuno.a929046c.png\";","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>- Sistema Solar -</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Title extends React.Component {\n  render() {\n    const { headline } = this.props;\n    return (\n      <h2 className=\"title\">{headline}</h2>\n    );\n  }\n}\n\nTitle.propTypes = {\n  headline: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass PlanetCard extends React.Component {\n  render() {\n    const { planetName, planetImage } = this.props;\n    return (\n      <div data-testid=\"planet-card\" className=\"images-container\">\n        <p data-testid=\"planet-name\" className=\"planet-name\">{planetName}</p>\n        <img className=\"images rot\" src={ planetImage } alt={ `Planeta ${planetName}` } />\n      </div>\n    );\n  }\n}\n\nPlanetCard.propTypes = {\n  planetName: PropTypes.string.isRequired,\n  planetImage: PropTypes.string.isRequired,\n};\n\nexport default PlanetCard;\n","import MercurioImg from '../images/Mercurio.png';\nimport VenusImg from '../images/Venus.png';\nimport TerraImg from '../images/Terra.png';\nimport MarteImg from '../images/Marte.png';\nimport JupiterImg from '../images/Jupiter.png';\nimport SaturnoImg from '../images/Saturno.png';\nimport Uranoimg from '../images/Urano.png';\nimport Netunoimg from '../images/Netuno.png';\n\nconst Planets = [\n  { name: 'Mercúrio', image: MercurioImg },\n  { name: 'Vênus', image: VenusImg },\n  { name: 'Terra', image: TerraImg },\n  { name: 'Marte', image: MarteImg },\n  { name: 'Júpiter', image: JupiterImg },\n  { name: 'Saturno', image: SaturnoImg },\n  { name: 'Urano', image: Uranoimg },\n  { name: 'Netuno', image: Netunoimg },\n];\n\nexport default Planets;\n","import React from 'react';\nimport Title from './Title';\nimport PlanetCard from './PlanetCard';\nimport planets from '../data/planets';\n\nclass SolarSystem extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"solar-system\">\n        <Title headline=\"Planetas\" />\n        { planets.map((planeta) => (<PlanetCard\n          planetName={ planeta.name }\n          planetImage={ planeta.image }\n          key={ planeta.name }\n        />)) }\n      </div>\n    );\n  }\n}\n\nexport default SolarSystem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MissionCard extends React.Component {\n  render() {\n    const { name, year, country, destination } = this.props;\n    return (\n      <div data-testid=\"mission-card\" className=\"mission-card\">\n        <p data-testid=\"mission-name\" className=\"mission-title\">{name}</p>\n        <p data-testid=\"mission-year\">{year}</p>\n        <p data-testid=\"mission-country\">{country}</p>\n        <p data-testid=\"mission-destination\">{destination}</p>\n      </div>\n    );\n  }\n}\n\nMissionCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  country: PropTypes.string.isRequired,\n  destination: PropTypes.string.isRequired,\n};\n\nexport default MissionCard;\n","const USA = 'EUA';\nconst URSS = 'URSS';\n\nconst Missions = [\n  {\n    name: 'Apollo 11',\n    year: '1960',\n    country: USA,\n    destination: 'Lua',\n  },\n  {\n    name: 'Voyager 1',\n    year: '1977',\n    country: USA,\n    destination: 'Espaço interestelar',\n  },\n  {\n    name: 'Mars Pathfinder',\n    year: '1996',\n    country: USA,\n    destination: 'Marte',\n  },\n  {\n    name: 'Estação Internacional Espacial',\n    year: '1998',\n    country: 'EUA e Rússia',\n    destination: 'Órbita terrestre',\n  },\n  {\n    name: 'Kepler',\n    year: '2009',\n    country: USA,\n    destination: 'Espaço interestelar',\n  },\n  {\n    name: 'Cassini-Huygens',\n    year: '2009',\n    country: 'EUA e União Europeia',\n    destination: 'Saturno',\n  },\n  {\n    name: 'Mariner 2',\n    year: '1962',\n    country: USA,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Venera 4',\n    year: '1967',\n    country: URSS,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Mariner 5',\n    year: '1967',\n    country: USA,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Mariner 10',\n    year: '1975',\n    country: USA,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Venera 16',\n    year: '1983',\n    country: URSS,\n    destination: 'Vênus',\n  },\n  {\n    name: 'MESSENGER',\n    year: '2004',\n    country: USA,\n    destination: 'Mercúrio',\n  },\n  {\n    name: 'Genesis',\n    year: '2001',\n    country: USA,\n    destination: 'Terra',\n  },\n  {\n    name: '2001 Mars Odyssey',\n    year: '2001',\n    country: USA,\n    destination: 'Marte',\n  },\n  {\n    name: 'Mars Surveyor 98 Lander',\n    year: '1999',\n    country: USA,\n    destination: 'Marte',\n  },\n  {\n    name: 'Nozomi (Planeta B)',\n    year: '1998',\n    country: 'Japão',\n    destination: 'Marte',\n  },\n  {\n    name: 'Fobos 1',\n    year: '1988',\n    country: URSS,\n    destination: 'Marte',\n  },\n  {\n    name: 'Fobos 2',\n    year: '1988',\n    country: URSS,\n    destination: 'Marte',\n  },\n  {\n    name: 'Galileo',\n    year: '1989',\n    country: USA,\n    destination: 'Júpiter',\n  },\n  {\n    name: 'Cassini/Huygens',\n    year: '1997',\n    country: 'EUA e Europa',\n    destination: 'Saturno',\n  },\n];\n\nexport default Missions;\n","import React from 'react';\nimport Title from './Title';\nimport MissionCard from './MissionCard';\nimport missions from '../data/missions';\n\nclass Missions extends React.Component {\n  render() {\n    return (\n      <>\n        <Title headline=\"Missões\" />\n        <div data-testid=\"missions\" className=\"missions-container\">\n          {missions.map((mission) => (<MissionCard\n            name={ mission.name }\n            year={ mission.year }\n            country={ mission.country }\n            destination={ mission.destination }\n            key={ mission.name }\n          />))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Missions;\n","import React from 'react';\nimport Header from './components/Header';\nimport SolarSystem from './components/SolarSystem';\nimport Missions from './components/Missions';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <main>\n        <Header />\n        <SolarSystem />\n        <Missions />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}